@{
	ViewData["Title"] = "Home Page";

	// ***
	// *** Default values for all charts. Note the colors are taken from the
	// *** bootstrap theme file (variables.less)
	// ***
	string[] colors = new string[] { "#2A9FD6", "#77B300", "#FF8800", "#CC0000", "#9933CC" };
	int gridTextSize = 9;
	float fillOpacity = 0.75F;
}

<div class="text-center">
	<h1 class="display-4">Charts</h1>

	<!-- Bar Chart -->
	<div class="row">
		<div class="col-12 mb-5 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Bar Chart</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorBarChart&gt;()
	.WithId("monthlyPrecipitation1")
	.UsingDataFrom(this.Url.Action("MonthlyPrecipitation", "Home"))
	.WithXKey("month")
	.WithYKeys(new string[] { "avg", "rec", "actual" })
	.WithLabels(new string[] { "Average", "Record", "Actual" })
	.WithGridTextSize(gridTextSize)
	.WithBarColors(colors)
	.WithHoverState(ChartHoverState.Auto)
	.AllowResizing())
			</pre>

			@(Chart.Create<RazorBarChart>()
					.WithId("monthlyPrecipitation1")
					.UsingDataFrom(this.Url.Action("MonthlyPrecipitation", "Home"))
					.WithXKey("month")
					.WithYKeys(new string[] { "avg", "rec", "actual" })
					.WithLabels(new string[] { "Average", "Record", "Actual" })
					.WithGridTextSize(gridTextSize)
					.WithBarColors(colors)
					.WithHoverState(ChartHoverState.Auto)
					.AllowResizing())
		</div>
	</div>

	<!-- Stacked Bar Chart -->
	<div class="row">
		<div class="col-12 mb-5 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Stacked Bar Chart</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorBarChart&gt;()
	.WithId("monthlyPrecipitation2")
	.UsingDataFrom(this.Url.Action("MonthlyPrecipitation", "Home"))
	.WithXKey("month")
	.WithYKeys(new string[] { "avg", "rec", "actual" })
	.WithLabels(new string[] { "Average", "Record", "Actual" })
	.WithGridTextSize(gridTextSize)
	.WithBarColors(colors)
	.AsStacked()
	.WithHoverState(ChartHoverState.True)
	.AllowResizing())
			</pre>

			@(Chart.Create<RazorBarChart>()
					.WithId("monthlyPrecipitation2")
					.UsingDataFrom(this.Url.Action("MonthlyPrecipitation", "Home"))
					.WithXKey("month")
					.WithYKeys(new string[] { "avg", "rec", "actual" })
					.WithLabels(new string[] { "Average", "Record", "Actual" })
					.WithGridTextSize(gridTextSize)
					.WithBarColors(colors)
					.AsStacked()
					.WithHoverState(ChartHoverState.True)
					.AllowResizing())
		</div>
	</div>

	<!-- Line Chart -->
	<div class="row">
		<div class="col-12 mb-5 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Line Chart</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorLineChart&gt;()
	.WithId("actualPrecipitation")
	.UsingDataFrom(this.Url.Action("ActualPrecipitation", "Home"))
	.WithHeight("350px")
	.WithXKey("month")
	.WithYKeys(new string[] { "a2103", "a2012" })
	.WithLabels ( new string[] { "2013", "2012" })
	.WithXLabelAngle(60)
	.WithDateFormat (new DateFormatter("MMMM"))
	.WithXLabels(xLabel.Month)
	.WithXLabelFormat(new DateFormatter("MMMM"))
	.WithGridTextSize(gridTextSize)
	.WithFillOpacity (fillOpacity)
	.WithYmax ("8")
	.AllowResizing())
			</pre>
			@(Chart.Create<RazorLineChart>()
					.WithId("actualPrecipitation")
					.UsingDataFrom(this.Url.Action("ActualPrecipitation", "Home"))
					.WithHeight("350px")
					.WithXKey("month")
					.WithYKeys(new string[] { "a2103", "a2012" })
					.WithLabels ( new string[] { "2013", "2012" })
					.WithXLabelAngle(60)
					.WithDateFormat (new DateFormatter("MMMM"))
					.WithXLabels(xLabel.Month)
					.WithXLabelFormat(new DateFormatter("MMMM"))
					.WithGridTextSize(gridTextSize)
					.WithFillOpacity (fillOpacity)
					.WithYmax ("8")
					.AllowResizing())
		</div>
	</div>

	<!-- Donut Chart -->
	<div class="row">
		<div class="col-12 mb-5 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Donut Chart 1</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorBarChart&gt;()
	.WithId("seasonalPrecipitation")
	.UsingDataFrom(this.Url.Action("SeasonalPrecipitation", "Home"))
	.WithColors(colors)
	.WithFormatter(new AppendFormatter(" in"))
	.WithLabelColor("#BBBBBB")
	.AllowResizing())
			</pre>
			@(Chart.Create<RazorDonutChart>()
					.WithId("seasonalPrecipitation")
					.UsingDataFrom(this.Url.Action("SeasonalPrecipitation", "Home"))
					.WithColors(colors)
					.WithFormatter(new AppendFormatter(" in"))
					.WithLabelColor("#BBBBBB")
					.AllowResizing())
		</div>
	</div>

	<!-- Donut Chart -->
	<div class="row">
		<div class="col-12 mb-5 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Donut Chart 2</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorBarChart&gt;()
	.WithId("fiveYearTotals")
	.UsingDataFrom(this.Url.Action("FiveYearTotals", "Home"))
	.WithHeight("200px")
	.WithColors(colors)
	.WithFormatter(new AppendFormatter(" in"))
	.WithLabelColor("#BBBBBB")
	.WithBackgroundColor("#353535")
	.AllowResizing()
	.PreventResizing())
			</pre>
			@(Chart.Create<RazorDonutChart>()
					.WithId("fiveYearTotals")
					.UsingDataFrom(this.Url.Action("FiveYearTotals", "Home"))
					.WithHeight("200px")
					.WithColors(colors)
					.WithFormatter(new AppendFormatter(" in"))
					.WithLabelColor("#BBBBBB")
					.WithBackgroundColor("#353535")
					.AllowResizing()
					.PreventResizing())
		</div>
	</div>

	<!-- Area Chart -->
	<div class="row">
		<div class="col-12 pt-3 pb-3 card">
			<h2 class="text-left mb-3">Area Chart</h2>
			<pre class="text-left">
@@(Chart.Create&lt;RazorBarChart&gt;()
	.WithId("totalPrecipitation")
	.UsingDataFrom(this.Url.Action("TotalPrecipitation", "Home"))
	.WithXKey("month")
	.WithYKeys(new string[] { "tot" })
	.WithLabels(new string[] { "Year to Date" })
	.WithLineSmoothing()
	.WithFillOpacity(fillOpacity)
	.WithPostUnits("in")
	.WithGridTextSize(gridTextSize)
	.WithLineColors(colors)
	.WithDateFormat(new DateFormatter("MMMM, YYYY"))
	.WithXLabels(xLabel.Month)
	.WithXLabelFormat(new DateFormatter("MMMM"))
	.AllowResizing())
			</pre>
			@(Chart.Create<RazorAreaChart>()
					.WithId("totalPrecipitation")
					.UsingDataFrom(this.Url.Action("TotalPrecipitation", "Home"))
					.WithXKey("month")
					.WithYKeys(new string[] { "tot" })
					.WithLabels(new string[] { "Year to Date" })
					.WithLineSmoothing()
					.WithFillOpacity(fillOpacity)
					.WithPostUnits("in")
					.WithGridTextSize(gridTextSize)
					.WithLineColors(colors)
					.WithDateFormat(new DateFormatter("MMMM, YYYY"))
					.WithXLabels(xLabel.Month)
					.WithXLabelFormat(new DateFormatter("MMMM"))
					.AllowResizing())
		</div>
	</div>
</div>